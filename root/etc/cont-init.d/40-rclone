#!/usr/bin/with-contenv bash
source /config/settings.conf
source /config/usersettings.conf

# config json
configure_Json(){
  rclonePath='/config/.rclone.conf'
  [[ -e ${rclonePath} ]] || mkdir -p ${rclonePath}
  [[ ! $(ls $jsonPath | egrep .json$) ]] && log "No Service Accounts Json Found." FAIL && exit 1
  # add rclone config for new keys if not already existing
  for json in ${jsonPath}/*.json; do
    if [[ ! $(egrep  '^\[GDSA[0-9]+\]$' -A7 $rclonePath | grep $json) ]]; then
      oldMaxGdsa=$(egrep  '^\[GDSA[0-9]+\]$' $rclonePath | sed 's/\[GDSA//g;s/\]//' | sort -g | tail -1)
      newMaxGdsa=$((++oldMaxGdsa))
cat <<-CFG >> $rclonePath
[GDSA${newMaxGdsa}]
type = drive
client_id =
client_secret =
scope = drive
root_folder_id = $rootFolderId
service_account_file = $json
team_drive = $teamDrive
CFG
      ((++newGdsaCount))
    fi
  done
}

# Initalize gdsaDB 
init_DB(){
  # get list of avail gdsa accounts
  gdsaList=$(rclone listremotes --config /config/.rclone.conf | sed 's/://' | egrep '^GDSA[0-9]+$')
  if [[ -n $gdsaList ]]; then
      numGdsa=$(echo $gdsaList | wc -w)
      echo -e " [INFO] Initializing $numGdsa Service Accounts."
  fi

  # reset existing logs & db
  echo -n '' > /tmp/SA_error.log
  validate(){
      local s=0
      rclone lsd --config /config/.rclone.conf ${1}:/ &>/tmp/.SA_error.log.tmp && s=1
      if [[ $s == 1 ]]; then
        echo -e " [ OK ] ${1}\t Validation Successful!"
        egrep -q ^${1}=. $gdsaDB || echo "${1}=0" >> $gdsaDB
      else
        echo -e " [WARN] ${1}\t Validation FAILURE!"
        cat /tmp/.SA_error.log.tmp >> /tmp/SA_error.log
        ((gdsaFail++))
      fi
  }
i=0
numProcs=10
  # parallelize validator for speeeeeed
    for gdsa in $gdsaList; do
      if (( i++ >= numProcs )); then
        wait -n
      fi
      validate $gdsa &
      sleep 0.1
    done
  wait
}

configure_Json
init_DB